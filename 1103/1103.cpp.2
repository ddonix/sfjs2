#include <iostream>
#include <cstring>
#include <queue>

using namespace std;

const int maxn = 202;

int pic[maxn][maxn];
int idx[maxn][maxn];
int cid = 0;

int bm[16][4];

const char *cm = "WAKJSD";

int m, n;

void dfs(int i, int j, int id)
{
	if(i < 0 || i >= m || j < 0 || j >= n || idx[i][j] || !pic[i][j])
		return;
	idx[i][j] = id;
	for(int ii = -1; ii <= 1; ii++)
		for(int jj = -1; jj <= 1; jj++)
			if (ii || jj) dfs(i+ii, j+jj, id);
}

void dfs2(int i, int j)
{
	if(i < 0 || i >= m || j < 0 || j >= n || idx[i][j] || pic[i][j])
		return;
	idx[i][j] = -1;
	for(int ii = -1; ii <= 1; ii++)
		for(int jj = -1; jj <= 1; jj++)
			if (ii || jj) dfs2(i+ii, j+jj);
}

int main()
{
	int ka = 1;
	for(char i = 0; i < 16; i++)
	{
		if(i & 0x8) bm[i][0] = 1;
		if(i & 0x4) bm[i][1] = 1;
		if(i & 0x2) bm[i][2] = 1; 
		if(i & 0x1) bm[i][3] = 1;
	}
	while(cin>>m>>n && m != 0)
	{
		string s;
		for(int i = 0; i < m; i++)
		{
			cin>>s;
			for(int j = 0; j < n; j++)
				memcpy(&pic[i][j*4], 
				bm[(s[j] >= '0' && s[j] <= '9') ? (s[j]-'0') : (10+s[j]-'a')], 
				4*sizeof(int));
		}
		n *= 4;
	
		cid = 0;
		memset(idx, 0, sizeof(idx));	
		for(int i = 0; i < m; i++)
			for(int j = 0; j < n; j++)
				if (pic[i][j] && (idx[i][j] == 0))
					dfs(i, j, ++cid);
		
		
		vector<int> v;
		v.resize(cid+1);
		
		dfs2(0, 0);
		for(int i = 0; i < m; i++)
			for(int j = 0; j < n; j++)
			{
				if (!idx[i][j])
				{
					if(j > 0)
					{
						dfs2(i, j);
						v[idx[i][j-1]]++;
					}
					else
					{
						dfs2(i, j);
						v[idx[i-1][j]]++;
					}
				}
			}
		cout<<"Case "<<ka++<<": ";
		priority_queue<char, vector<char>, greater<char> > pq;
		for(int i = 1; i <= cid; i++) 
			pq.push(cm[v[i]]);
		while(!pq.empty())
		{
			cout<<pq.top();
			pq.pop();
		}
		cout<<endl;
	}
}
